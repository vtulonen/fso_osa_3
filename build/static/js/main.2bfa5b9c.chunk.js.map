{"version":3,"sources":["services/persons.js","components/AddPersonForm.js","components/Person.js","components/DisplayPersons.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","create","newObject","post","update","id","put","destroy","delete","AddPersonForm","newName","setNewName","persons","setPersons","newNumber","setNewNumber","displayNotification","onSubmit","e","preventDefault","newPerson","name","number","undefined","find","person","then","response","concat","data","catch","error","console","log","alert","window","confirm","status","filter","updatePerson","value","onChange","target","type","Person","className","onClick","DisplayPersons","map","toLowerCase","includes","Filter","setFilter","Notification","message","App","useState","setMessage","messageType","setMessageType","text","setTimeout","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bfa5b9c.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\n// Delete\nconst destroy = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst personService = {\n  getAll,\n  create,\n  update,\n  destroy,\n};\n\nexport default personService;\n","import React from \"react\";\nimport personService from \"../services/persons\";\n\nconst AddPersonForm = ({\n  newName,\n  setNewName,\n  persons,\n  setPersons,\n  newNumber,\n  setNewNumber,\n  displayNotification,\n}) => {\n\n  const updatePerson = (id, newPerson) => {\n    if (\n      window.confirm(\n        `${newName} is already in the phonebook. Do you wish to update the number?`\n      )\n    ) {\n      personService\n        .update(id, newPerson)\n        .then((response) => {\n          if (response.status === 200) {\n            personService.getAll().then((response) => {\n              setPersons(response.data);\n              displayNotification(\"success\", `${newPerson.name}'s number updated successfully`);\n            });\n          }\n        })\n        .catch((error) => {\n          displayNotification(\"error\", `${newPerson.name} already removed from the server`);\n          setPersons(persons.filter((person) => person.id !== id));\n        });\n    }\n  };\n\n  const addPerson = (e) => {\n    e.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n\n    // Palauttaa undefined jos mikään person.name ei vastaa newNamea\n    persons.find((person) => person.name === newName) === undefined\n      ? personService // Jos ei löydy, lisätään luetteloon\n          .create(newPerson)\n          .then((response) => {\n            setPersons(persons.concat(response.data));\n            displayNotification(\"success\", `${newName} added successfully`);\n            setNewName(\"\");\n            setNewNumber(\"\");\n          })\n          .catch((error) => {\n            console.log(error.response.data);\n            displayNotification(\"error\", error.response.data.error);\n          })\n      : // Else Puhelinnumeron päivitys jos eroaa annetusta\n      persons.find((person) => person.number === newNumber)\n      ? alert(`${newName} is already in the phonebook`)\n      : updatePerson(\n          persons.find((person) => person.name === newName).id,\n          newPerson\n        );\n  };\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddPersonForm;\n","import React from \"react\";\nimport personService from \"../services/persons\";\n\nconst Person = ({ name, number, persons, setPersons, displayNotification }) => {\n  const deletePerson = () => {\n    if (window.confirm(`Do you want to delete ${name}?`)) {\n      const id = persons.find((person) => person.name === name).id;\n\n      personService\n        .destroy(id)\n        .then((response) => {\n          if (response.status === 204) {\n            personService.getAll().then((response) => {\n              setPersons(response.data);\n              displayNotification(\"success\", `${name} removed successfully`);\n            });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  return (\n    <div className=\"person\">\n      <span>\n        {name} {number}\n      </span>\n      <button onClick={deletePerson}>delete</button>\n    </div>\n  );\n};\n\nexport default Person;\n","import Person from \"./Person\";\nimport React from \"react\";\n\nconst DisplayPersons = ({ persons, setPersons, filter, displayNotification }) => {\n  return (\n    <div className=\"persons\">\n      {persons.map((person) => {\n        if (person.name.toLowerCase().includes(filter))\n          return (\n            <Person\n              key={person.name}\n              name={person.name}\n              number={person.number}\n              persons={persons}\n              setPersons={setPersons}\n              displayNotification={displayNotification}\n            />\n          );\n        else return null;\n      })}\n    </div>\n  );\n};\n\nexport default DisplayPersons;\n","import React from \"react\";\n\nconst Filter = ({ filter, setFilter }) => {\n  return (\n    <div>\n      <span>Filter names </span>\n      <input\n        value={filter}\n        onChange={(e) => {\n          setFilter(e.target.value);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Notification = ({ type, message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className={type}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport AddPersonForm from \"./components/AddPersonForm\";\nimport DisplayPersons from \"./components/DisplayPersons\";\nimport Filter from \"./components/Filter\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [messageType, setMessageType] = useState(null);\n\n  const displayNotification = (type, text) => {\n    setMessageType(type)\n    setMessage(text);\n    setTimeout(() => {\n      setMessage(null);\n    }, 5000);\n  };\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((response) => {\n        setPersons(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification type={messageType} message={message} />\n      <Filter filter={filter} setFilter={setFilter} />\n\n      <h2>Add new</h2>\n      <AddPersonForm\n        newName={newName}\n        setNewName={setNewName}\n        persons={persons}\n        setPersons={setPersons}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        displayNotification={displayNotification}\n      />\n      <h2>Numbers</h2>\n      <DisplayPersons\n        persons={persons}\n        setPersons={setPersons}\n        filter={filter.toLowerCase()}\n        displayNotification={displayNotification}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}